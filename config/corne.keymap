/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
    };

    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <36 41>;
        };

        ctrlEnter {
            bindings = <&kt RC(ENTER)>;
            key-positions = <36 40>;
        };

        m {
            bindings = <&kt SQT>;
            key-positions = <34 22>;
        };

        z {
            bindings = <&kt BSPC>;
            key-positions = <22 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  B  |  É  |  P  |  O  |  È   |    |  M  |  V   |  D  |  L  |  J  |  Z   |
            // | ESC  |  A  |  U  |  I  |  E  |  ;   |    |  C  |  T   |  S  |  R  |  N  |  ^   |
            // | SHFT |  À  |  Y  |  X  |  :  |  K   |    |  ?  |  Q   |  G  |  H  |  F  | SHFT |
            //                    | GUI | LWR | SPC |     | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T    &kp Y  &kp U      &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D      &kp F      &kp G    &kp H  &kp J      &kp K          &kp L    &kp SEMI  &kp I
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B    &kp N  &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                         &kp RIGHT  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  "  |  «  |  »  |  (   |  )  |   |  @  |  +  |  -  |  /  |  *  |  =   |
            // | BTCLR| BT1 | BT2 | BT3 | BT4  |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |      |     |   |     |     |     |     |     |      |
            //                    |     | SPC | PKSP |   | ALT | ENT  |    |

            bindings = <
&kp TAB     &kp N1        &kp N2             &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp MINUS
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &kp LBKT      &kt RIGHT_BRACKET  &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                             &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4   |  5  |   |  6  |  7  |  8  |  9  |  0  |  °   |
            // | ESC  |     |     |     |      |     |   |  =  |  %  |  z  |  w  |  ç  |  $   |
            // | ESC  |     |     |     |      |     |   |  ç  |  w  |  =  |  %  |  z  |  $   |
            // | SHFT |     |     |     |      |     |   |  °  |  `  |  Z  |  W  |  Ç  |  #   |
            //                    |     | SPC | PKSP |   | ALT | ENT  |    |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR  &kp UNDER
&kp ESC    &trans    &trans  &trans    &trans    &trans       &kp BSLH   &kp RBKT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS  &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
